package jetbrain.mps.cryptoexchange.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int TokenBalance = 0;
  public static final int TokenNetwork = 1;
  public static final int TokenPair = 2;
  public static final int TransferRequest = 3;
  public static final int account = 4;
  public static final int cryptoExchange = 5;
  public static final int order = 6;
  public static final int savingOrder = 7;
  public static final int subsystem = 8;
  public static final int token = 9;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x885932350df545d0L, 0xbc76936b0ff5f304L);
    builder.put(0x4ae7a0d4d1aa573bL, TokenBalance);
    builder.put(0x3a77f2ff09e3a438L, TokenNetwork);
    builder.put(0x4ae7a0d4d1aa5749L, TokenPair);
    builder.put(0x3a77f2ff09f77540L, TransferRequest);
    builder.put(0x151908d59864d18bL, account);
    builder.put(0x151908d598638a7aL, cryptoExchange);
    builder.put(0x2a868524b103cefcL, order);
    builder.put(0x3b9502d85b274741L, savingOrder);
    builder.put(0x151908d59864d166L, subsystem);
    builder.put(0x4ae7a0d4d1aa5723L, token);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
