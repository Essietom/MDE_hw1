package jetbrain.mps.cryptoexchange.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor mycryptoExchange__BehaviorDescriptor = new cryptoExchange__BehaviorDescriptor();
  private final BHDescriptor mysubsystem__BehaviorDescriptor = new subsystem__BehaviorDescriptor();
  private final BHDescriptor myTokenPair__BehaviorDescriptor = new TokenPair__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myTokenPair__BehaviorDescriptor;
      case 1:
        return mycryptoExchange__BehaviorDescriptor;
      case 2:
        return mysubsystem__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x885932350df545d0L, 0xbc76936b0ff5f304L, 0x4ae7a0d4d1aa5749L), MetaIdFactory.conceptId(0x885932350df545d0L, 0xbc76936b0ff5f304L, 0x151908d598638a7aL), MetaIdFactory.conceptId(0x885932350df545d0L, 0xbc76936b0ff5f304L, 0x151908d59864d166L)).seal();
}
