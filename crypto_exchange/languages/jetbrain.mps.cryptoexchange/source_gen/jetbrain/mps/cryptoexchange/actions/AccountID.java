package jetbrain.mps.cryptoexchange.actions;

/*Generated by MPS */

import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrain.mps.cryptoexchange.behavior.cryptoExchange__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class AccountID {
  public static class NodeFactory_4293340948023062197 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, int index, SModel model) {
      SPropertyOperations.assign(newNode, PROPS.name$MnvL, cryptoExchange__BehaviorDescriptor.getNextAccountAddress_id3Il0Hxr7C8a.invoke(SNodeOperations.as(SNodeOperations.getParent(SNodeOperations.cast(enclosingNode, CONCEPTS.subsystem$US)), CONCEPTS.cryptoExchange$Fs)));
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept subsystem$US = MetaAdapterFactory.getConcept(0x885932350df545d0L, 0xbc76936b0ff5f304L, 0x151908d59864d166L, "jetbrain.mps.cryptoexchange.structure.subsystem");
    /*package*/ static final SConcept cryptoExchange$Fs = MetaAdapterFactory.getConcept(0x885932350df545d0L, 0xbc76936b0ff5f304L, 0x151908d598638a7aL, "jetbrain.mps.cryptoexchange.structure.cryptoExchange");
  }
}
